
1. About page tests

  TC 1.1.1 – Check the page has title 'Sweet Shop Project'
    Preconditions:
    User is on the About page.

    Test Steps:
      Observe the page title and confirm it's visible.

    Expected Result:
    The title should be "Sweet Shop Project".

  TC 1.1.2 – Check the page has the description

    Preconditions:
    User is on the About page.

    Test Steps:
      Locate the description section below the page title.
      Observe the text content.

    Expected Result:
    The page displays a relevant and visible description of the Sweet Shop.

  TC 1.1.3 – Check the page has the banner and it matches 2018

    Preconditions:
    User is on the About page.

    Test Steps:
      Scroll to the banner section of the page.
      Compare the displayed banner with the 2018 design reference.

    Expected Result:
    The banner is visible and matches the 2018 design/logo.
 
  TC 1.1.4 – Verify navbar elements are visible on the About page

    Preconditions:
    User is on the About page.

    Test Steps:
      Inspect the navigation bar at the top of the page.
      Verify the presence and visibility of the following elements:
        Logo, "Sweet Shop", "Sweets", "About", "Login"  and "Basket" links
        basket index is visible number is show

    Expected Result:
    All listed navbar elements are present and visible.
 
  TC 1.2.1 – Verify clicking each navigation link redirects to the correct page from the About page
 
    Preconditions:
    User is on the About page.

    Test steps
    Click on the Sweet Shop logo (navbar brand).
      Verify the user is redirected to the Home page.
    Navigate back to the About page.
    Click on the Sweets link in the header.
      Verify the user is redirected to the Browse Sweets page.
    Navigate back to the About page.
    Click on the Login link in the header.
      Verify the user is redirected to the Login page.
    Navigate back to the About page.
    Click on the Basket link in the header.
      Verify the user is redirected to the Basket page.

    Expected Result:
    Each link redirects the user to the correct corresponding page:
        Logo → Home page (.advertising is visible)
        Sweets → Browse Sweets page (#navbarColor01 is visible)
        Login → Login page (Login heading is visible)
        Basket → Basket page (Your Basket heading is visible)

2. Login page tests
  TC 2.1.1 – Check 'Login' page has title 'Login'

    Preconditions:
    User is on the Login page.

    Test Steps:
      Observe the page title and confirm it's visible.

    Expected Result:
    The page shows the title "Login" 

  TC 2.1.2 – Check 'Login' page has the description

    Preconditions:
    User is on the Login page.

    Test Steps:
      Observe the description text content.

    Expected Result:
    The page shows a relevant description (e.g., “login to your account”).

  TC 2.1.3 – Verify hover effect tooltip on "email address" and "password" in description

    Preconditions:
    User is on the Login page.

    Test Steps:
      Locate the page description text.
      Identify the words "email address" and "password" within the description.
      Hover the cursor over "email address" for 2s and observe tooltip popup text
      Hover the cursor over "password" for 2s and observe tooltip popup text

    Expected Result:
    Tooltips (question mark or popup box) appear when hovering over "email address" and "password"
    showig text 'test"user.com and qwerty after hovering for 2 seconds

  TC 2.1.4 – Confirm the presence of input fields: Email address textbox (pre-filled with "you@example.com"). Password textbox (labeled "Password").

    Preconditions:
    User is on the Login page.

    Test Steps:
      Locate the input field labeled "Email address".
      Verify that the placeholder text is you@example.com.
      Locate the input field labeled "Password".
      Verify that the placeholder text is Password.

    Expected Result:
    Both input fields are visible, correctly labeled, and contain the expected placeholder text.

  TC 2.1.5 – Ensure the Login button is visible and correctly labeled

    Preconditions:
    User is on the Login page.

    Test Steps:
      Locate the 'Login' button below the input fields.
      Read and verify the text on the button.

    Expected Result:
    Login button is visible and displays the label "Login".

  TC 2.1.6 – Check navbar elements are visible

    Preconditions:
    User is on the Login page.

    Test Steps:
      Inspect the navigation bar at the top of the page.
      Verify the presence and visibility of the following elements:
        Logo, "Sweet Shop", "Sweets", "About", "Login"  and "Basket" links
        basket index is visible number is show

    Expected Result:
    All listed navbar elements are present and visible

  TC 2.1.7 – Verify all social media icons are visible

    Preconditions:
    User is on the Login page.

    Test Steps:
      Scroll to the bottom of the login form.
      Identify three icons:
        Twitter (now X)
        Facebook
        LinkedIn

    Expected Result:
    All three icons are visible and match the expected platform branding.

  TC 1.1.8 – Check the page has the banner and it matches 2018

    Preconditions:
    User is on the Login page.

    Test Steps:
      Scroll to the banner section of the page.
      Compare the displayed banner with the 2018 design reference.

    Expected Result:
    The banner is visible and matches the 2018 design/logo.

  TC 2.2.1 – Password masking (should show •••• instead of plaintext)

    Preconditions:
    User is on the Login page.

    Test Steps:
      Locate the password input field.
      Enter any characters into the password field.
      Observe the characters as they are typed.

    Expected Result:
    Typed characters are masked and appear as dots (••••); not displayed in plain text.

  TC 2.2.2 – Successful login with valid email credentials

    Preconditions:
    User is on the Login page.
    User has valid login credentials.

    Test Steps:
        Enter a valid username.
        Enter the correct password.
        Click the Login button.
        confirm user is redirected to Your Account page

    Expected Result:
    User is successfully logged in and redirected to 'your Account' page.

  TC 2.2.3 – Unsuccessful login with invalid email format (user@)

    Preconditions:
    User is on the Login page.

    Test Steps:
      Enter an invalid email format user@ 
      Enter a valid password.
      Click the "Login" button.

    Expected Result:
    User is not logged in.
    An error message is shown: "Please enter a valid email address" or equivalent.

    Status:  FAIL 

  TC 2.2.4. – Unsuccessful login with invalid email format (user.com)

    Preconditions:
    User is on the Login page.

    Test Steps:
      Enter an invalid email format user.com 
      Enter a valid password.
      Click the "Login" button.

    Expected Result:
    User is not logged in.
    An error message is shown: "Please enter a valid email address" or equivalent.

    Status: PASS

  TC 2.2.5. – Unsuccessful login with invalid email format (user@.com)

    Preconditions:
    User is on the Login page.

    Test Steps:
      Enter an invalid email format user@.com 
      Enter a valid password.
      Click the "Login" button.

    Expected Result:
    User is not logged in.
    An error message is shown: "Please enter a valid email address" or equivalent.

    Status: FAIL

  TC 2.2.6 – Unsuccessful login with empty email field

    Preconditions:
    User is on the Login page.

    Test Steps:
      Leave the email field empty.
      Enter a valid password.
      Click the "Login" button.

    Expected Result:
    User is not logged in.
    An error message is displayed: "Please enter a valid email address. "

  TC 2.2.7 – Unsuccessful login with empty password field

    Preconditions:
    User is on the Login page.

    Test Steps:
      Enter a valid email address.
      Leave the password field empty.
      Click the "Login" button.

    Expected Result:
    User is not logged in.
    An error message is displayed: "Please enter a valid password."

  TC 2.2.8 – Unsuccessful login with both email and password fields empty

    Preconditions:
    User is on the Login page.

    Test Steps:
      Leave both email and password fields empty.
      Click the "Login" button.

    Expected Result:
    User is not logged in.
    Error messages are shown for both fields, 'Please enter a valid email address' and 'Please enter a valid password'.

  TC 2.2.9 – Unsuccessful login scenario password to short (7 symobls)

    Preconditions:
    User is on the Login page.

    Test Steps:
      Enter a valid email address.
      Enter a password with fewer than 5 characters (e.g., 1234).
      Click the "Login" button.

    Expected Result:
    User is not logged in.
    An error message is displayed: "Please enter a valid password. " or equivalent.

    Status: FAIL
  
  TC 2.2.10 – Confirm 'X' icon redirects to X.com/Login

    Preconditions:
    User is on the Login page.

    Test Steps:
      Locate and click the Twitter/X icon.
      Observe the redirection behavior.

    Expected Result:
    User is redirected to x.com/i/flow/login

    Status FAIL

  TC 2.2.11 – Confirm 'FB' icon redirects to facebook.com/Login

    Preconditions:
    User is on the Login page.

    Test Steps:
        Locate and click the Facebook icon.
        Observe the redirection behavior.

    Expected Result:
    User is redirected to https://www.facebook.com/login

    Status FAIL
 
  TC 2.2.12 – Confirm 'Li' icon redirects to linkedin.com/Login

    Preconditions:
    User is on the Login page.

    Test Steps:
        Locate and click the LinkedIn icon.
        Observe the redirection behavior.

    Expected Result:
    User is redirected to https://www.linkedin.com/login

    Status FAIL
  
  TC 2.3.1 – Verify clicking each navigation link redirects to the correct page from the Login page
    Test Summary:
    Ensure all available header links on the Login page navigate to their correct destinations.

    Preconditions:
    User is on the Login page.

    Test Steps:
    Click on the Sweet Shop logo (navbar brand).
      Verify the user is redirected to the Home page.
    Navigate back to the Login page.
    Click on the Sweets link in the header.
      Verify the user is redirected to the Browse Sweets page.
    Navigate back to the Login page.
    Click on the About link in the header.
      Verify the user is redirected to the About page.
    Navigate back to the Login page.
    Click on the Login link in the header.
        Verify the user stays on (or returns to) the Login page.
    Click on the Basket link in the header.
      Verify the user is redirected to the Basket page.

    Expected Result:
    Each link redirects the user to the correct corresponding page:
    Logo → Home page (.advertising is visible)
    “Sweets” → Sweets page (Browse sweets is visible)
    “About” → About page (Sweet Shop Project heading is visible)
    “Login” → Login page (Login heading is visible)
    “Basket” → Basket page (Your Basket heading is visible)

3. Your Account tests

  TC 3.1.1 – Verify navbar elements are visible on the Your Account page
 
    Preconditions:
    User is logged in and on the "Your Account" page.

    Test Steps:
      Inspect the navigation bar at the top of the page.
      Verify the presence and visibility of the following elements:
        Logo, "Sweet Shop", "Sweets", "About", "Login"  and "Basket" links
        basket index is visible number is show

    Expected Result:
    All listed navbar elements are present and visible.

  TC 3.1.2 – Verify the page title is "Your Account"
    Preconditions:
    User is logged in and on the "Your Account" page.

    Test Steps:
      Check the title at the top of the content area.
      Confirm it reads "Your Account".

    Expected Result:
    The page displays the title "Your Account".

  TC 3.1.3 – Verify the welcome message displays the user’s email

    Preconditions:
    User is logged in and on the "Your Account" page.

    Test Steps:
      Look for a message that starts with "Welcome back".
      Verify that the message includes the logged-in user’s email (e.g., test@user.com).

    Expected Result:
    The welcome message is visible and displays the correct user email.

  TC 3.1.4 – Verify the "Previous Orders Table" title is visible

    Preconditions:
    User is on the "Your Account" page.

    Test Steps:
      Locate the previous orders section.
      Confirm the presence and visibility of the title "Previous Orders Table".

    Expected Result:
    The title "Previous Orders Table" is present and visible.

  TC 3.1.5 – Confirm table columns are present

    Preconditions:
    User is on the "Your Account" page.

    Test Steps:
      Locate the orders table.

      Confirm the table headers include:
        Order Number
        Date Ordered
        Order Description
        Order Total

    Expected Result:
    All expected columns are present in the orders table.

  TC 3.1.6 – Validate specific order data
 
    Preconditions:
    User has order history displayed on the "Your Account" page.

    Test Steps:
      Check for the following rows in the orders table:
        Order #1: "Swansea Mixture x 1", Total = £1.50
        Order #2: "Sherbert Straws x 1", Total = £0.75
        Order #3: "Chocolate Cups + Swansea Mixture", Total = £8.00

    Expected Result:
    All three orders are displayed with correct descriptions and totals.

  TC 3.1.7 – Verify order dates are in readable format

    Preconditions:
    User is on the "Your Account" page.

    Test Steps:
      Locate the "Date Ordered" column.
      Confirm the format follows the readable structure, e.g., "11th Feb 2019".

    Expected Result:
    Dates are displayed in a consistent and readable format.

  TC 3.1.8 – Verify "Item Order Breakdown" title is visible
    Test Summary:
    Ensure the section title for the order breakdown chart is present and clearly displayed.

    Preconditions:
    User is on the "Your Account" page.

    Test Steps:
      Scroll to the order breakdown chart section.
      Confirm the title "Item Order Breakdown" is visible above the chart.

    Expected Result:
    The title "Item Order Breakdown" is clearly visible above the chart.

  TC 3.1.9 – 'Item Order Breakdown' Chart canvas renders
    
    Preconditions:
    User is on the "Your Account" page.

    Test Steps
      Locate the chart canvas element with the ID transactionChart on the page.
      Verify that the chart canvas is visible.
       Verify that the canvas element has a valid 2D rendering context.

    Expected Result
    The chart canvas element is present and visible on the page.
    The canvas element has a valid 2D rendering context (optional).

  TC 3.1.10 – Check the page has the banner and it matches 2018

    Preconditions:
    User is on the Yout account page.

    Test Steps:
      Scroll to the banner section of the page.
      Compare the displayed banner with the 2018 design reference.

    Expected Result:
    The banner is visible and matches the 2018 design/logo.

  TC 3.2.1 – Verify sorting by "Order Number" (descending)

    Preconditions:
    User is on the "Your Account" page with multiple orders listed.

    Test Steps:
      Click on the "Order Number" column header.
      Observe the order of rows.

    Expected Result:
    Orders are sorted from highest to lowest number (e.g., #3 → #1).

    Status Fail // single click does not change order numbers order
  
  TC 3.2.2 – Verify sorting by "Date Ordered" (descending)
    Test Summary:
    Ensure clicking the "Date Ordered" column header sorts orders from most recent to oldest.

    Preconditions:
    User is on the "Your Account" page with multiple orders listed.

    Test Steps:
        Click the "Date Ordered" column header.
        Observe the sorting order of dates.

    Expected Result:
    Orders are sorted by most recent date first.

  TC 3.2.3 – Verify sorting by "Order Description" (Z → A)

    Preconditions:
    User is on the "Your Account" page with multiple orders listed.

    Test Steps:
      Click on the "Order Description" column header.
      Check the order of product descriptions.

    Expected Result:
    Orders are sorted alphabetically in descending (Z → A) order.

    Status FAIL bug: incorest sorting swansea mixture before sherber straws
  
  TC 3.2.4 – Verify sorting by "Order Total" (high → low)

    Preconditions:
    User is on the "Your Account" page with multiple orders listed.

    Test Steps:
        Click on the "Order Total" column header.
        Observe the order of rows.

    Expected Result:
    Orders are sorted by highest total to lowest.

  TC 3.2.5 – Verify "Delete Item" functionality updates count and retains remaining items

    Preconditions:
    Basket is empty

    Test Steps:
      from Sweets apage add 2 items to the basket
      Click 'Login' and login with valid user details
      Observe basket item counter in navigation and confirm 2 is shown
      Click on the "Delete Item" button next to one product.
      Observe basket count and product list.

    Expected Result:
    Item is removed, basket count is updated, and remaining items stay unaffected.

  TC 3.3.1 – Verify clicking each navigation link redirects to the correct page from the Your account page

    Preconditions:
    User has a valid account (email & password).

    Test Steps:
      Log in.
      Navigates from "Your Account" page using each nav link.
      Verifies each redirect + title.
      Logs in again after each navigation (to simulate session reset).

    Expected Result:
      Each navigation link from the "Your Account" page successfully redirects to the correct page.

4. Home page Functionality

  TC 4.1.1 – Verify the page title is exactly "Welcome to the sweet shop!"

    Preconditions:
    User is on the Home page.

    Test Steps:
        Locate the page title and confirm text is shown.

    Expected Result:
    The title text should be exactly "Welcome to the sweet shop!".`

  TC 4.1.2 – Verify the page contains the correct description text

    Preconditions:
    User is on the Home page.

    Test Steps:
      Locate the description text under the main title.
      Make sure th description is relevant to page

    Expected Result:
    A clearly visible and relevant description of the sweet shop is displayed.

  TC 4.1.3 – Check the page has the banner and it matches 2018

    Preconditions:
    User is on the Home page.

    Test Steps:
      Scroll to the banner section of the page.
      Compare the displayed banner with the 2018 design reference.

    Expected Result:
    The banner is visible and matches the 2018 design/logo.

  TC 4.1.4 – Verify advertising elements are visible on the page
    Test Summary:
    Ensure promotional or advertising elements are displayed on the Home page.

    Preconditions:
    User is on the Home page.

    Test Steps:
      Look for banner ad and confirm it is visible.

    Expected Result:
    Advertising elements are visible and clearly distinguishable from regular content.

  TC 4.1.5 – Verify 'Browse sweets' button is visible
    
    Preconditions:
    User is on the Home page

    Test Steps:
      Locate the 'Browse sweets' button
      Verify the button:
        Is clearly visible on the page
        Has text ("Browse sweets")
   
    Expected Result:
      Button is present and visible on page load
      Button text is readable (proper color contrast)

   TC 4.1.6 – Verify the 'Most popular' container has a Title

    Preconditions:
    User is on the Home page.

    Test Steps:
      Observe 'most popular' section.
      Check for a visible Title 'Most Popular'

    Expected Result:
    Title is visible and includes text 'Most popular'

  TC 4.1.6 – Verify the 'Most popular' container has a Title

    Preconditions:
    User is on the Home page.

    Test Steps:
      Observe 'most popular' section.
      Check for a visible Title 'Most Popular'

    Expected Result:
    Title is visible and includes text 'Most popular'

    ---report bug title is not shown

  TC 4.1.7 – Verify the 'most popular' container has a description

    Preconditions:
    User is on the Home page.

    Test Steps:
      Observe 'most popular' section.
      Check for a visible heading or text that describes the section.

    Expected Result:
    The section includes a clear heading or description (e.g., "most popular choice").

  TC 4.1.8 – Verify that all 4 product cards are displayed in 'most popular' category
 
    Preconditions:
    User is on the Home page.

    Test Steps:
      Observe 'most popular' section.
      Confirm that items are displayed.

    Expected Result:
    At least one product item is visible in the 'most popular' section.

  TC 4.1.9 – Verify product cards display correct information
    Preconditions:
      User is on the Home page.
      'Most popular' section is loaded.

    Test Steps:
      Locate the 'most popular' section.
      Identify all product cards (Sherbert Straws, Sherbert Discs, Chocolate Cups, Bon Bons).
      For each card, verify:
        Product name is displayed.
        Description text is present.
        Price is visible and formatted correctly (£ symbol, decimal places).

    Expected Result:
      All 4 product cards are displayed.
      Each card shows:
        Name (e.g., "Sherbert Straws").
        Description (e.g., "UFO's Sherbert Filled Flying Saucers").
        Price (e.g., "£0.75", "£1.00").

  TC 4.1.10 – Verify 'Add to Basket' buttons are displayed
    
    Preconditions:
    User is on the homepage.

    Test Steps:
      Check that all 4 'Add to Basket' buttons are displayed.

    Expected Result:
    All buttons are visible 

  TC 4.1.11 – Verify navbar elements are visible on the About page

    Preconditions:
    User is logged in and on the "Home" page.

    Test Steps:
      Inspect the navigation bar at the top of the page.
      Verify the presence and visibility of the following elements:
        Logo, "Sweet Shop", "Sweets", "About", "Login"  and "Basket" links

    Expected Result:
    All listed navbar elements are present and visible.

  TC 4.2.1 – Verify clicking each navigation link redirects to the correct page

    Preconditions:
    User is on the Home page.

    Test Steps:
      Click on the “Sweets” link.
      Verify the page navigates to the Browse Sweets page.
      Return to the Home page.
      Click on the “About” link.
      Verify the page navigates to the About page.
      Return to the Home page.
      Click on the “Login” link.
      Verify the page navigates to the Login page.
      Return to the Home page.
      Click on the “Basket” link.
      Verify the page navigates to the Basket page.

    Expected Result:Each link redirects the user to the correct corresponding page:
    “Sweets” → Browse Sweets
    “About” → About
    “Login” → Login
    “Basket” → Basket

  TC 4.3.1 – Verify the 'Browse sweets' button is visible and redirects user to sweets page.

    Preconditions:
    User is on the Home page.

    Test Steps:
      Locate the 'Browse sweets' button.
      Check if the button is visible and not disabled.
      Attempt to click the button.
      Observe change verify that user got redirected to browse sweets

    Expected Result:
    The 'Browse sweets' button is visible and redirects user to the Browse Sweets page.

 TC 4.3.2 – Verify 'Add to Basket' buttons functionality

    Preconditions:
    User is on the Home page.
    basket is empty

    Test Steps:
      attempt to click on 'Add to basket' button for 2 items
      Observe change verify that basket counter updates
      Go to the basket page
      Check items are in the basket

    Expected Result:
    basket counter updated 2 items added to basket




  TC 4.4.1 – From Home page, navigate to Login page → perform successful login → confirm redirection back to Home
    Test Summary:
    Verify the login workflow from the Home page redirects back to Home upon successful authentication.

    Preconditions:
    User is on the Home page and has valid login credentials.

    Test Steps:
        Click on the “Login” link in the navbar.
        On the Login page, enter valid credentials and submit the form.
        Observe the redirection behavior after login.

    Expected Result:
    User is successfully logged in and redirected back to the Home page.

  TC 4.4.2 – Add item from 'most popular' container → verify basket counter updates
    Test Summary:
    Ensure that adding a product from the 'most popular' section updates the basket counter.

    Preconditions:
    User is on the Home page with at least one item listed under 'most popular'.

    Test Steps:
        Scroll to the 'most popular' section.
        Click on “Add to Basket” for any product.
        Observe the basket counter in the header.

    Expected Result:
    The basket counter increments by 1.

  TC 4.4.3 – Navigate to Basket page → verify added items are present
    Test Summary:
    Verify that items added from the Home page appear correctly in the Basket page.

    Preconditions:
    User has added one or more items to the basket.

    Test Steps:
        Click on the “Basket” link in the header.
        On the Basket page, review the list of items.

    Expected Result:
    Previously added items are displayed in the basket with correct quantity and details.

  TC 4.4.1 – Add item from 'most popular'and verify basket counter updates.
    
    Preconditions:
    User is on the homepage
    Cart is empty (counter shows "0")

    Test Steps:
      Click "Add to Basket" for "Sherbert Straws" (£0.75)
      Immediately verify:
        Cart counter updates from "0" → "1"
      Click "Add to Basket" for "Bon Bons" (£1.00) twice
      Verify:
        Cart counter updates to "3"

    Expected Result:
      Counter increments instantly on each click
      No page reload required

  TC 4.4.2 – Verify Basket page displays added items correctly

    Preconditions:
    TC 4.4.2 has been executed (cart contains 3 items)

    Test Steps:
      Click the cart counter icon (or "View Basket" link)
      On Basket page, verify:
        Item list:
          Sherbert Straws | Qty: 1 | Price: £0.75
          Bon Bons | Qty: 2 | Price: £2.00
        Calculations:
          Subtotal: £2.75
          Shipping: "Calculated at checkout"
        Visuals:
          Product thumbnails are visible
          "Proceed to Checkout" button is enabled
      Click "Remove" next to Sherbert Straws
      Verify:
        Item disappears from list
        Subtotal updates to £2.00

    Expected Result:
      All items/prices persist across navigation
      Calculations are accurate to the penny
      Modifications (remove/update) work without page reload


5. Browse sweets page functionalilty

  TC 5.1.1 – Verify the page title is exactly "Browse sweets"

    Preconditions:
    User is on the Browse Sweets page.

    Test Steps:
      Locate the title element and confirm it's visible

    Expected Result:
      The element contains exactly the text: "Browse sweets

  TC 5.1.2 – Verify the page contains the correct description text
    
    Preconditions:
    User is on the Browse Sweets page.

    Test Steps:
      Locate the dectiption for browse sweets page
      Make sure th description is relevant to page

    Expected Result:
      The element contains the text: "Browse our delicious choice of retro sweets."

  TC 5.1.3 – Verify navbar elements are visible on the Browse Sweets page

      Preconditions:
      User is on the Browse sweets page.

      Test Steps:
        Inspect the navigation bar at the top of the page.
        Verify the presence and visibility of the following elements:
          Logo, "Sweet Shop", "Sweets", "About", "Login"  and "Basket" links
          basket index is visible number is show

      Expected Result:
      All listed navbar elements are present and visible.e.

  TC 5.1.4 – Check the page has the footer and it mentions 2018

    Preconditions:
    User is on the Browse Sweets page.

    Test Steps:
      Scroll to the bottom of the page.
      Check for the footer conatins "2018".

    Expected Result:
      The footer text is visible and contains "2018".

  TC 5.1.5 – Check the page contains 16 product items

    Preconditions:
    User is on the Browse Sweets page.

    Test Steps:
      Locate all elements with the class .card (representing products).
      Count visible items

    Expected Result:
      Exactly 16 product cards are visible.

  TC 5.1.6 – Check each product displays correct information

    Preconditions:
    User is on the Browse Sweets page. Product list is available.

    Test Steps:
      For each product:
          Locate its product name using .card-title.
          Confirm product description appears via .card-text.
          Verify the price appears using .text-muted, in the format £x.xx.
          Check the product image loads correctly and is visible.

    Expected Result:
      Each product displays:
        Valid name.
        Correct description.
        Correct price (with £ and two decimal places).
        Image is loaded and displayed.

  TC 5.1.7 – Verify each product has a corresponding "Add to Basket" button
  
    Preconditions:
    User is on the Browse Sweets page. Product data (name and ID) is known.

    Test Steps:
    For each product:
      Locate the .card that contains the product's title.
      Within that card, locate the "Add to Basket" button.
      Check that the button contains the correct data-id attribute matching the product's ID.

    Expected Result:
      Each product card has a corresponding "Add to Basket" button.
      The button includes the correct data-id.




6. Basket Functionality

  TC 4.1.2 – Check page title is “Your Basket”
    Test Summary:
    Ensure the Basket page displays the correct page title.

    Preconditions:
    User is on the Basket page.

    Test Steps:
        Look at the main heading at the top of the page.
        Verify that it says “Your Basket”.

    Expected Result:
    Page title is “Your Basket”.

  TC 4.1.3 – Check page has basket description text
    Test Summary:
    Confirm that the page includes description text explaining the purpose of the page.

    Preconditions:
    User is on the Basket page.

    Test Steps:
        Locate the text under the “Your Basket” title.
        Read and verify that it provides a helpful description of what to do next.

    Expected Result:
    The description text is visible and provides guidance.

  TC 4.1.4 – Verify Billing Address Form
    Test Summary:
    Ensure the Billing Address section contains all necessary input fields and dropdowns.

    Preconditions:
    User is on the Basket page.

    Test Steps:
        Scroll to the Billing Address section.
        Confirm the following fields are present:
            First name, Last name, Email, Address, Address 2 (Optional), Zip
            Dropdowns: Country, City

    Expected Result:
    All listed fields are visible and accessible.

  TC 4.1.5 – Verify Payment Form fields
    Test Summary:
    Check that the Payment section includes all required inputs.

    Preconditions:
    User is on the Basket page.

    Test Steps:
      Locate the Payment section.
      Verify presence of:
        Name on card, Credit card number, Expiration, CVV

    Expected Result:
    All payment fields are correctly displayed.

  TC 4.1.6 – Verify Basket Summary when Empty
    Test Summary:
    Ensure the basket summary shows zero items and £0.00 total when empty.

    Preconditions:
    Basket is empty.
    User is on the Basket page.

    Test Steps:
      Look at the basket summary on the right.
      Verify it shows 0 items and a total of £0.00.

    Expected Result:
    Counter = 0, Total = £0.00.

  TC 4.1.8 – Check Standard Shipping updates total by £1.99
    Test Summary:
    Ensure selecting Standard Shipping adds £1.99 to the basket total.

    Preconditions:
    Basket contains at least one item.
    User is on the Basket page.

    Test Steps:
        Note current basket total.
        Select “Standard Shipping (£1.99)”.
        Verify updated total reflects additional £1.99.

    Expected Result:
    Total increases by £1.99.`

  TC 4.1.9 – Check Promo Code textbox is visible
    Test Summary:
    Verify that the Promo Code textbox is displayed.

    Preconditions:
    User is on the Basket page.

    Test Steps:
        Locate the promo code section.
        Check that the input textbox is visible.

    Expected Result:
    Promo Code textbox is present and editable.

  TC 4.1.10 – Check Redeem button applies code
    Test Summary:
    Ensure the "Redeem" button applies the entered promo code.

    Preconditions:
    Valid promo code is available.
    User is on the Basket page.

    Test Steps:
        Enter a valid promo code in the textbox.
        Click the “Redeem” button.
        Observe if discount is applied.

    Expected Result:
    Promo code is applied and total updates correctly.

  TC 4.1.11 – Check Empty Basket button clears items
    Test Summary:
    Ensure the “Empty Basket” button removes all items from the basket.

    Preconditions:
    Basket has at least one item.
    User is on the Basket page.

    Test Steps:
        Click the “Empty Basket” link/button.
        Check that the basket summary shows 0 items and £0.00.

    Expected Result:
    All items are removed, basket is empty.

  TC 4.1.12 – Check Continue to Checkout button
    Test Summary:
    Ensure the “Continue to checkout” button is present and clickable.

    Preconditions:
    User is on the Basket page.

    Test Steps:
        Locate the blue “Continue to checkout” button.
        Check if it is enabled and can be clicked.

    Expected Result:
    Button is visible and functional.

  TC 4.2.1 – Add a product to the basket
    Test Summary:
    Verify that clicking "Add to Basket" adds one product and updates basket counter.

    Preconditions:
    User is on the Browse Sweets page.

    Test Steps:
        Click "Add to Basket" on one product.
        Check the basket icon counter updates to 1.
        Open the Basket page and verify the item is listed.

    Expected Result:
    Item is added and shown in the basket.

  TC 4.2.2 – Add multiple quantities of the same product
    Test Summary:
    Ensure multiple clicks of "Add to Basket" on the same item increase its quantity.

    Preconditions:
    User is on the Browse Sweets page.

    Test Steps:
        Click “Add to Basket” on the same product multiple times (e.g. 3 times).
        Go to the Basket page.
        Confirm quantity of the item is 3.

    Expected Result:
    Item quantity is shown as 3 in the basket.

  TC 4.2.3 – Add multiple different products
    Test Summary:
    Verify that different products can be added and listed in the basket.

    Preconditions:
    User is on the Browse Sweets page.

    Test Steps:
        Add three different items to the basket.
        Navigate to the Basket page.
        Confirm all three items appear.

    Expected Result:
    All different products are listed correctly.

  TC 4.2.4 – Confirm total price updates correctly
    Test Summary:
    Ensure that the total in the basket reflects prices of all items + shipping/promo if applicable.

    Preconditions:
    Basket contains multiple items.

    Test Steps:
      Add items with known prices.
      Calculate expected total manually.
      Compare with total displayed on the Basket page.

    Expected Result:
    Displayed total matches expected total.

  TC 4.2.5 – Remove a product from the basket
    Test Summary:
    Verify that removing an item updates the list and total price.

    Preconditions:
    Basket contains at least one product.

    Test Steps:
      Remove an item from the basket.
      Confirm that it no longer appears in the basket.
      Confirm total is updated.

    Expected Result:
    Item is removed and total reflects the change.

  TC 4.2.6 – Verify checkout summary matches basket contents
    Test Summary:
    Ensure the checkout summary matches what's listed in the basket.

    Preconditions:
    User has items in the basket and continues to checkout.

    Test Steps:
        Add products to basket.
        Click “Continue to checkout”.
        Confirm items and quantities match those from basket summary.

    Expected Result:
    Checkout summary mirrors the basket’s items and totals.


  Test Summary:
  Ensure the system handles broken or inactive links gracefully without crashing.

  Preconditions:
  Application contains a broken or intentionally disabled navigation link.

  Test Steps:
    Click on a broken or disabled link (if present).
    Observe system behavior.

  Expected Result:
  No JavaScript errors, blank screens, or crashes occur. The application handles the event gracefully (e.g., stays on the current page or shows an error message).


  ### 3.4 Edge and Negative Cases
  - **3.4.1** Verify the navigation links show appropriate feedback (e.g., loading indicator) on slow network.
  - **3.4.2** Verify the page handles missing banner image gracefully (e.g., alt text or fallback).
  - **3.4.3** Verify the 'Browse sweets' button is disabled or hidden if there are no sweets available.
  - **3.4.4** Verify that clicking broken or disabled links does not cause page crashes.